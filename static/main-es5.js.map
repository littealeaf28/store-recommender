{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/grocery-form/grocery-form.component.ts","webpack:///src/app/grocery-form/grocery-form.component.html","webpack:///src/app/store-card/store-card.component.ts","webpack:///src/app/store-card/store-card.component.html","webpack:///src/app/store-map/store-map.component.ts","webpack:///src/app/store-map/store-map.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GroceryFormComponent","http","endpoint","groceryList","err","navigator","geolocation","getCurrentPosition","location","body","latitude","coords","longitude","groceries","split","post","subscribe","res","console","log","onSubmit","StoreCardComponent","StoreMapComponent","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<header>\r\n  <h1>Store Recommender</h1>\r\n  <h3>Find the best store for your shopping desires!</h3>\r\n</header>\r\n<body>\r\n  <app-grocery-form></app-grocery-form>\r\n</body>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { GroceryFormComponent } from './grocery-form/grocery-form.component';\r\nimport { StoreCardComponent } from './store-card/store-card.component';\r\nimport { StoreMapComponent } from './store-map/store-map.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GroceryFormComponent,\r\n    StoreCardComponent,\r\n    StoreMapComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatInputModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { from } from 'rxjs'\r\n\r\n@Component({\r\n  selector: 'app-grocery-form',\r\n  templateUrl: './grocery-form.component.html',\r\n  styleUrls: ['./grocery-form.component.scss']\r\n})\r\nexport class GroceryFormComponent implements OnInit {\r\n  endpoint = 'https://store-recommender.wn.r.appspot.com/';\r\n  groceryList = '';\r\n  err: null | string = null;\r\n\r\n  constructor(public http: HttpClient) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    //first get location\r\n    if(navigator.geolocation) {\r\n      //get geolocation uses callbacks cause it's kind of old TnT\r\n      navigator.geolocation.getCurrentPosition((location) => {\r\n        const body = {\r\n          location: {\r\n            latitude: location.coords.latitude,\r\n            longitude: location.coords.longitude\r\n          },\r\n          groceries: this.groceryList.split(',')\r\n        }\r\n\r\n        this.http.post(this.endpoint, body).subscribe((res) => {\r\n          console.log(res)\r\n        })\r\n      })\r\n    } else {\r\n      this.err = 'Please activate geolocation'\r\n    }\r\n  }\r\n}\r\n","<form (ngSubmit)=\"onSubmit()\">\n  <p *ngIf=\"err\">{{ err }}</p>\n  <p>Enter your groceries in a comma separated list below:</p>\n  <mat-form-field>\n    <mat-label>Grocery List</mat-label>\n    <textarea matInput type=\"text\" placeholder=\"Milk, detergent\" [(ngModel)]=\"groceryList\" name=\"groceryList\"></textarea>\n  </mat-form-field>\n  <button type='submit' mat-raised-button>Submit</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-store-card',\n  templateUrl: './store-card.component.html',\n  styleUrls: ['./store-card.component.scss']\n})\nexport class StoreCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <h1></h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Loader } from 'google-maps';\n\n@Component({\n  selector: 'app-store-map',\n  templateUrl: './store-map.component.html',\n  styleUrls: ['./store-map.component.scss']\n})\nexport class StoreMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  initMap() {\n    // const uluru = { lat: -25.344, lng: 131.036 };\n    // // The map, centered at Uluru\n    // const map = new google.maps.Map(document.getElementById(\"map\"), {\n    //   zoom: 4,\n    //   center: uluru,\n    // });\n    // // The marker, positioned at Uluru\n    // const marker = new google.maps.Marker({\n    //   position: uluru,\n    //   map: map,\n    // });\n  }\n}\n","<p>store-map works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}