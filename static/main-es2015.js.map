{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Validators} from '@angular/forms';\r\n\r\nimport { from } from 'rxjs'\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n  url='https://store-recommender.wn.r.appspot.com/';\r\n  groceryList='';\r\n  optimalStore : any;\r\n\r\n  err = {\r\n    isErr: false,\r\n    message: \"\"\r\n  };\r\n\r\n  constructor(\r\n    public fb : FormBuilder,\r\n    public http : HttpClient\r\n  ){}\r\n\r\n  /*groceryForm = this.fb.group({\r\n    list:['',Validators.required]\r\n  });*/\r\n\r\n\r\n\r\n  onSubmit(){\r\n    //first get location\r\n    console.log(\"We are submitting\");\r\n    if(navigator.geolocation){\r\n      //get geolocation uses callbacks cause it's kind of old TnT\r\n      navigator.geolocation.getCurrentPosition((location)=>{\r\n        //location.latitude, location.longitude\r\n        console.log(location);\r\n        const body = {\r\n          location: location.coords,\r\n          groceries : this.groceryList.split(',')\r\n        }\r\n        this.http.post(this.url,body).subscribe((optimal)=>{\r\n          if(optimal){\r\n            this.optimalStore = optimal;\r\n          }\r\n          else{\r\n            this.err = {\r\n              isErr: true,\r\n              message: \"There were no optimal stores found\"\r\n            }\r\n          }\r\n        },\r\n        (err)=>{\r\n          console.log(err);\r\n        })\r\n      })\r\n    }\r\n    else{\r\n      this.err = {\r\n        isErr: true,\r\n        message: \"Geolocation is not supported by this browser\"\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","<div>\r\n  <div *ngIf=\"err.isErr\">\r\n    {{err.message}}\r\n  </div>\r\n  <!--<form [formGroup] = 'groceryForm'>\r\n    \r\n  </form>-->\r\n  <div>\r\n    Please enter your grocery list as a list of comma separated values\r\n  </div>\r\n  <form class=\"example-form\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>grocery list</mat-label>\r\n      <textarea matInput placeholder=\"milk,bread,detergent\" [(ngModel)]=\"groceryList\" name=\"groceryList\"></textarea>\r\n    </mat-form-field>\r\n    <button type='submit'>Submit</button>\r\n  </form>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {  HttpClientModule } from '@angular/common/http';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatInputModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}